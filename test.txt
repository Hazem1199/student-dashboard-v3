async function showGroup(id) {
  const students = await getInfoGroup(id);
  const tableBody = document.querySelector('.tbody2');

  // Remove all existing rows from the table
  while (tableBody.firstChild) {
    tableBody.removeChild(tableBody.firstChild);
  }

  // Create spinner element
  const spinner = document.createElement('div');
  spinner.classList.add('spinner');
  document.body.appendChild(spinner);

  let totalDoneModules = 0;
  let moduleCount = 0;
  let i;

  for (i = 1; i <= 12; i++) {
    students.forEach(student => {
      if (student[`g${i} module`] && new Date(student[`g${i} date`]) < new Date()) {
        const date = new Date(student[`g${i} date`]);
        const options = { year: 'numeric', month: 'short', day: 'numeric' };
        const formattedDate = date.toLocaleDateString(undefined, options);
        const newRow = document.createElement('tr');
        const moduleCell = document.createElement('td');
        const groupCell = document.createElement('td');
        const dateCell = document.createElement('td');
        newRow.appendChild(groupCell);
        newRow.appendChild(moduleCell);
        newRow.appendChild(dateCell);
        moduleCell.textContent = student[`g${i} module`];
        groupCell.textContent = student[`g${i}`];
        dateCell.textContent = formattedDate;
        tableBody.appendChild(newRow);
        moduleCount++;
        if (student[`g${i} date`]) {
          totalDoneModules++;
        }
      }
    });
  }

  // Hide spinner element
  document.body.removeChild(spinner);

  // Update the module count
  const moduleCountElement = document.getElementById('moduleCount');
  moduleCountElement.textContent = `${totalDoneModules} / ${moduleCount}`;

  // Update the footer based on the next module deadline
  const filteredModules = students.filter(student => {
    const date = new Date(student[`g${i} date`]);
    return date >= new Date();
  });
  const nextModule = filteredModules.sort((a, b) => new Date(a[`g${i} date`]) - new Date(b[`g${i} date`]))[0];
  if (nextModule) {
    const formattedDueDate = new Intl.DateTimeFormat('en-US', { month: 'short', day: 'numeric', year: 'numeric' }).format(new Date(nextModule[`g${i} date`]));
    footer4.textContent = `Next deadline: ${formattedDueDate}`;
  } else {
    footer4.textContent = 'No upcoming deadlines';
  }
}
